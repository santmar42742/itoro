<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Trade</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
<style>
      body{
    background-color: #c9d6ff;
    background: linear-gradient(to right, #e2e2e2, #c9d6ff);
    display: flex;
   
    flex-direction: column;
    height: 100vh;

      background-image: url('/images/background.jpg');
      background-size: cover; /* Adjust to your preference */
   
      @media(max-width: 991px){
        .sidebar{
          background-color: rgba(255, 255, 255, 0.15);
          backdrop-filter: blur(15px);
        }
      }
  }
  .icon-container {
            background: linear-gradient(to bottom, #446ad3, #e46be8); /* Gradient background */
            padding: 20px;
            border-radius: 10px;
            max-width: 94%;
        }

    .TradeChartt{
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 2rem;
        flex-direction: row;
    }

    .historyChartCanva{
        width: 70%;
    }
    .formTrade{
        width: 25%;
        display: flex;
        flex-direction: column;
        gap:1rem;
        padding: 1.5rem;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 16px;
        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(5px);
        -webkit-backdrop-filter: blur(5px);
        border: 1px solid rgba(255, 255, 255, 0.3);
    }
    .tradeBtn{
        background: #446ad3 !important; 
        color: white !important;
        border: none !important;
  
    }
    .tradeBtn:hover{
        background-color: #6a82c3 !important;
        color: white !important;
    }

    @media screen and (max-width: 860px) {
        .TradeChartt{
        flex-direction: column;
    }
    .historyChartCanva{
        width: 100%;
    }
    .formTrade{
        width: 45%;
    }
    }
    @media screen and (max-width: 500px) {
      
    .formTrade{
        width: 100%;
    }
    }
</style>
</head>
<body>
    <header>
        <%- include('./partials/header'); %>
    
      </header>
      <div style=" align-items: center;
      justify-content: center;   display: flex;
   
   flex-direction: column;margin-top: 20px;">
   <div style="text-align: center;">
    <h2 class="text-white">Welcome</h2>
    <h3 class="text-white text-small"><%= user.name %></h3>
  </div>
        </div>
    
      <div class="container text-center my-5 icon-container"> <!-- Apply the background color here -->
        <div class="TradeChartt" style="margin-top: 34px;">
            <div class="historyChartCanva">
                <canvas id="cryptoChart"  ></canvas>
            </div>
            <div class="formTrade">
                <h3 style="color:white"> Trade <% selectedCoin %></h3>
                <input type="number" style="padding: 0.5rem;border-radius: 0.375rem;outline: none;border: none;" placeholder="enter the amount"/>
                <button class="btn tradeBtn" >Submit</button>
            </div>
        </div>
        <div class="toast-container position-fixed top-0 end-0 p-3">
            <!-- Error Toast -->
            <div id="errorToast" class="toast text-bg-danger" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">Balance too low to trade!</div>
                    <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        
            <!-- Success Toast -->
            <div id="successToast" class="toast text-bg-success" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">Trade successful!</div>
                    <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        </div>
    </div>

<script>
    const historyDatas = <%- historyData %>;
    console.log(historyDatas,"history data")
function splitLast3HoursData(data) {
    const threeHoursAgo = Date.now() - 3 * 60 * 60 * 1000; // Timestamp 3 hours ago
    const pastData = data.filter(entry => entry.date < threeHoursAgo); // Older than 3 hours
    const recentData = data.filter(entry => entry.date >= threeHoursAgo); // Last 3 hours

    return { pastData, recentData };
}

let { pastData: filteredHistory, recentData: upcomingData } = splitLast3HoursData(historyDatas);

let labels = filteredHistory.map(entry => new Date(entry.date).toLocaleTimeString());
let prices = filteredHistory.map(entry => entry.rate);
const ctx = document.getElementById('cryptoChart').getContext('2d');
const chart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: labels,
        datasets: [{
            label: '<%= selectedCoin %> Price (USD)',
            data: prices,
            borderColor: 'white',
            fill: true,
            backgroundColor: "rgba(255, 255, 255, 0.2)",
            pointRadius: 0
        }]
    },
    options: {
        plugins: {
            legend: {
                display: false
            }
        },
        responsive: true,
        scales: {
            x: {
                grid: { display: false },
                title: { display: true, text: "Time" , color:'white'},
                ticks:{color:'white'}
            },
            y: {
                grid: { display: false },
                title: { display: true, text: "USD" ,color:'white'},
                ticks:{color:'white'}

            }
        }
    }
});

//Function to add new data every 30 seconds
let index = 0;
function addNewData() {
        const newData = upcomingData[index];
        filteredHistory.push(newData);
        chart.data.labels.push(new Date(newData.date).toLocaleTimeString());
        chart.data.datasets[0].data.push(newData.rate);
        if (filteredHistory.length > 100) { // You can adjust the max points to keep in the graph
            filteredHistory.shift();
            chart.data.labels.shift();
            chart.data.datasets[0].data.shift();
        }
        chart.update();

        index++;
   
}
let interval = setInterval(() => {
    if (index < upcomingData.length) {
        addNewData();
    } else {
        console.log("No more data to add. Stopping updates.");
        clearInterval(interval); // Stop the interval
    }
}, 3000);   
</script>



<%- include('./partials/footer'); %>

<script>
        function showToast(toastId) {
        const toastElement = document.getElementById(toastId);
        const toast = new bootstrap.Toast(toastElement);
        toast.show();
    }
    document.addEventListener("DOMContentLoaded", function() {
        document.querySelector(".tradeBtn").addEventListener("click", async function(event) {
            console.log('clicked')
            event.preventDefault();
    
            const userId = "<%= user._id %>";  // Get user ID from EJS
            const coinCode = "<%= selectedCoin %>"; // Get selected coin from EJS
            const amount = document.querySelector("input[type='number']").value;
    
            if (!amount || amount <= 0) {
                alert("Please enter a valid amount");
                return;
            }
            const tradeBtn = document.querySelector(".tradeBtn");
            const amountInput = document.querySelector("input[type='number']");
            tradeBtn.innerHTML = "Trading...";
            tradeBtn.disabled = true;
            amountInput.disabled = true;
            setTimeout(async () => {
            try {
                const response = await fetch('/users/trade', {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ userId, coinCode, amount })
                });
    
                const data = await response.json();
    
                if (data.success) {
                    showToast("successToast"); // Show success toast
                    setTimeout(() => window.location.href = "/users/profile"); // Reload after 2s
                }else {
                showToast("errorToast"); // Show error toast
            }
            tradeBtn.innerHTML = "Submit";
            tradeBtn.disabled = false;
            amountInput.disabled = false;

            } catch (error) {
                console.error("Trade Error:", error);
                showToast("errorToast");
                tradeBtn.innerHTML = "Submit";
                tradeBtn.disabled = false;
                amountInput.disabled = false;
            }
        }, 120000);
        });
    });
    </script>
  <script>
    $(document).ready(function() {
      // Repeat animation every 5 seconds (adjust as needed)
      setInterval(function() {
        $(".animation-text").css({ "opacity": 0, "transform": "translateY(20px)" });
        setTimeout(function() {
          $(".animation-text").css({ "opacity": 1, "transform": "translateY(0)" });
        }, 100);
      }, 5000);
    });
  </script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js" integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>
</body>
</html>
